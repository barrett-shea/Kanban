{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celoe\\\\Kanban-1\\\\src\\\\Components\\\\Dnd\\\\Task.js\";\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Button } from 'react-bootstrap';\nimport { database, firestore } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task(_ref) {\n  let {\n    task,\n    index,\n    columnDetails,\n    state,\n    setState,\n    currentUser\n  } = _ref;\n  // task = state.tasks['task1'] \n  // index = index of task in a column. Changes when moved.\n  cons;\n\n  function handleRemove(e) {\n    e.preventDefault(); //Step 1: remove task from column.taskIds (remove from screen)\n\n    let updateColumnIds = columnDetails.taskIds.filter(id => id !== task.id);\n    const newColumn = { ...state.columns[columnDetails.id],\n      taskIds: updateColumnIds\n    }; //Step 2: remove task from tasks (free up space/memory)\n\n    delete state.tasks[task.id];\n    const newState = { ...state,\n      columns: { ...state.columns,\n        [columnDetails.id]: newColumn\n      }\n    };\n    setState(newState); //remove from column\n\n    firestore.collection(\"users\").doc(currentUser.uid).collection(\"columns\").doc(columnDetails.id).update({\n      taskIds: updateColumnIds\n    }); //remove task from database\n\n    firestore.collection(\"users\").doc(currentUser.uid).collection(\"tasks\").doc(task.id).delete();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: task.id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-wrap border mb-2 p-2 rounded d-flex justify-content-between ${snapshot.isDragging ? 'bg-info' : 'bg-white'}`,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      ref: provided.innerRef,\n      isDragging: snapshot.isDragging,\n      children: [task.content, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-light\",\n        size: \"sm\",\n        className: \"text-muted border-0\",\n        onClick: handleRemove,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/celoe/Kanban-1/src/Components/Dnd/Task.js"],"names":["React","Draggable","Button","database","firestore","Task","task","index","columnDetails","state","setState","currentUser","cons","handleRemove","e","preventDefault","updateColumnIds","taskIds","filter","id","newColumn","columns","tasks","newState","collection","doc","uid","update","delete","provided","snapshot","isDragging","draggableProps","dragHandleProps","innerRef","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,gBAApC;;AAEA,eAAe,SAASC,IAAT,OAA4E;AAAA,MAA9D;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA,QAArC;AAA+CC,IAAAA;AAA/C,GAA8D;AACzF;AACA;AACAC,EAAAA,IAAI;;AACJ,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF,GADuB,CAEvB;;AACA,QAAIC,eAAe,GAAGR,aAAa,CAACS,OAAd,CAAsBC,MAAtB,CAA8BC,EAAD,IAAQA,EAAE,KAAKb,IAAI,CAACa,EAAjD,CAAtB;AAEA,UAAMC,SAAS,GAAG,EAChB,GAAGX,KAAK,CAACY,OAAN,CAAcb,aAAa,CAACW,EAA5B,CADa;AAEhBF,MAAAA,OAAO,EAAED;AAFO,KAAlB,CALuB,CAUvB;;AAEA,WAAOP,KAAK,CAACa,KAAN,CAAYhB,IAAI,CAACa,EAAjB,CAAP;AAEA,UAAMI,QAAQ,GAAG,EACf,GAAGd,KADY;AAEfY,MAAAA,OAAO,EAAE,EACP,GAAGZ,KAAK,CAACY,OADF;AAEP,SAACb,aAAa,CAACW,EAAf,GAAoBC;AAFb;AAFM,KAAjB;AAQAV,IAAAA,QAAQ,CAACa,QAAD,CAAR,CAtBuB,CAwBvB;;AACAnB,IAAAA,SAAS,CAACoB,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCd,WAAW,CAACe,GAA9C,EAAmDF,UAAnD,CAA8D,SAA9D,EAAyEC,GAAzE,CAA6EjB,aAAa,CAACW,EAA3F,EACGQ,MADH,CACU;AAACV,MAAAA,OAAO,EAAED;AAAV,KADV,EAzBuB,CA4BvB;;AACAZ,IAAAA,SAAS,CAACoB,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCd,WAAW,CAACe,GAA9C,EAAmDF,UAAnD,CAA8D,OAA9D,EAAuEC,GAAvE,CAA2EnB,IAAI,CAACa,EAAhF,EAAoFS,MAApF;AACD;;AAED,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAEtB,IAAI,CAACa,EAA7B;AAAiC,IAAA,KAAK,EAAEZ,KAAxC;AAAA,cACG,CAACsB,QAAD,EAAWC,QAAX,kBACC;AACE,MAAA,SAAS,EAAG,oEAAmEA,QAAQ,CAACC,UAAT,GAAsB,SAAtB,GAAkC,UAAW,EAD9H;AAAA,SAEMF,QAAQ,CAACG,cAFf;AAAA,SAGMH,QAAQ,CAACI,eAHf;AAIE,MAAA,GAAG,EAAEJ,QAAQ,CAACK,QAJhB;AAKE,MAAA,UAAU,EAAEJ,QAAQ,CAACC,UALvB;AAAA,iBAOGzB,IAAI,CAAC6B,OAPR,eAQE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,eADV;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,SAAS,EAAC,qBAHZ;AAIE,QAAA,OAAO,EAAEtB,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;KA3DuBR,I","sourcesContent":["import React from 'react'\r\nimport {Draggable} from 'react-beautiful-dnd'\r\nimport {Button} from 'react-bootstrap'\r\nimport { database, firestore } from \"../../firebase\"\r\n\r\nexport default function Task({ task, index, columnDetails, state, setState, currentUser }) {\r\n  // task = state.tasks['task1'] \r\n  // index = index of task in a column. Changes when moved.\r\n  cons\r\n  function handleRemove(e) {\r\n    e.preventDefault()\r\n    //Step 1: remove task from column.taskIds (remove from screen)\r\n    let updateColumnIds = columnDetails.taskIds.filter((id) => id !== task.id)\r\n    \r\n    const newColumn = {\r\n      ...state.columns[columnDetails.id],\r\n      taskIds: updateColumnIds,\r\n    }\r\n\r\n    //Step 2: remove task from tasks (free up space/memory)\r\n    \r\n    delete state.tasks[task.id]\r\n\r\n    const newState = {\r\n      ...state,\r\n      columns: {\r\n        ...state.columns,\r\n        [columnDetails.id]: newColumn\r\n      },\r\n    }\r\n    \r\n    setState(newState)\r\n    \r\n    //remove from column\r\n    firestore.collection(\"users\").doc(currentUser.uid).collection(\"columns\").doc(columnDetails.id)\r\n      .update({taskIds: updateColumnIds})\r\n\r\n    //remove task from database\r\n    firestore.collection(\"users\").doc(currentUser.uid).collection(\"tasks\").doc(task.id).delete()\r\n  }\r\n  \r\n  return (\r\n    <Draggable draggableId={task.id} index={index}>\r\n      {(provided, snapshot) =>(\r\n        <div \r\n          className={`text-wrap border mb-2 p-2 rounded d-flex justify-content-between ${snapshot.isDragging ? 'bg-info' : 'bg-white'}`}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          isDragging={snapshot.isDragging}\r\n        >\r\n          {task.content}\r\n          <Button\r\n            variant=\"outline-light\"\r\n            size=\"sm\"\r\n            className=\"text-muted border-0\"\r\n            onClick={handleRemove}\r\n            >\r\n              X\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}