{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celoe\\\\Kanban-1\\\\src\\\\Components\\\\Dnd\\\\AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\nimport { database, firestore } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTask(_ref) {\n  _s();\n\n  let {\n    state,\n    setState,\n    currentUser\n  } = _ref;\n  const [value, setValue] = useState('');\n\n  function handleChange(e) {\n    e.preventDefault();\n    setValue(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (value) {\n      //prevent adding blank tasks\n      const id = uuidv4();\n      state.tasks[id] = {\n        id: id,\n        content: value\n      };\n      const newTaskIds = Array.from(state.columns['column1'].taskIds);\n      newTaskIds.push(id);\n      const newToDo = { ...state.columns['column1'],\n        taskIds: newTaskIds\n      };\n      const newState = { ...state,\n        columns: { ...state.columns,\n          [newToDo.id]: newToDo\n        }\n      };\n      setState(newState); //create new task\n\n      firestore.collection(\"users\").doc(currentUser.uid).collection(\"tasks\").doc(id).set({\n        id: id,\n        content: value,\n        userId: currentUser.uid,\n        createdAt: database.getCurrentTimestamp()\n      }); //add to column1\n\n      firestore.collection(\"users\").doc(\"cgK3TwzdJCRgrP6YiYVv44xBcPj2\").collection(\"columns\").doc('column1').update({\n        taskIds: newTaskIds\n      });\n      setValue(''); // cleanup input\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"w-50 mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"d-flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        value: value,\n        placeholder: \"Start Typing...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        className: \"text-nowrap mx-1\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTask, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["C:/Users/celoe/Kanban-1/src/Components/Dnd/AddTask.js"],"names":["React","useState","Form","Button","Container","v4","uuidv4","database","firestore","AddTask","state","setState","currentUser","value","setValue","handleChange","e","preventDefault","target","handleSubmit","id","tasks","content","newTaskIds","Array","from","columns","taskIds","push","newToDo","newState","collection","doc","uid","set","userId","createdAt","getCurrentTimestamp","update"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Form, Button, Container} from 'react-bootstrap'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { database, firestore } from \"../../firebase\"\r\n\r\n\r\nexport default function AddTask ({ state, setState, currentUser }) {\r\n  \r\n  const [value, setValue] = useState('')\r\n  \r\n  function handleChange(e) {\r\n    e.preventDefault();\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (value) { //prevent adding blank tasks\r\n    const id = uuidv4()\r\n    state.tasks[id] =  {id: id, content: value}\r\n  \r\n    const newTaskIds = Array.from(state.columns['column1'].taskIds)\r\n    newTaskIds.push(id)\r\n    \r\n    const newToDo = {\r\n        ...state.columns['column1'],\r\n      taskIds: newTaskIds,\r\n      }\r\n    const newState = {\r\n        ...state, \r\n        columns: {\r\n          ...state.columns,\r\n          [newToDo.id]: newToDo, \r\n        } \r\n      } \r\n    \r\n    setState(newState)\r\n    \r\n    //create new task\r\n    firestore.collection(\"users\").doc(currentUser.uid).collection(\"tasks\").doc(id)\r\n      .set({\r\n        id : id,   \r\n        content: value,\r\n        userId: currentUser.uid,\r\n        createdAt:  database.getCurrentTimestamp()\r\n      })\r\n    \r\n    //add to column1\r\n    firestore.collection(\"users\").doc(\"cgK3TwzdJCRgrP6YiYVv44xBcPj2\").collection(\"columns\").doc('column1')\r\n      .update({taskIds: newTaskIds})\r\n\r\n\r\n    setValue('') // cleanup input\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container className='w-50 mt-4'>\r\n    <Form className='d-flex flex-row'>\r\n        <Form.Control \r\n          value={value} \r\n          placeholder='Start Typing...' \r\n          onChange={handleChange} \r\n        />\r\n    <Button \r\n      variant=\"primary\"\r\n      type='submit'\r\n      onClick={handleSubmit}\r\n      className='text-nowrap mx-1'\r\n    >\r\n        Add Task\r\n    </Button>\r\n    </Form>\r\n    </Container>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}