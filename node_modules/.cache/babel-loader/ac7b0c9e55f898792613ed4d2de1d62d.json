{"ast":null,"code":"const InitialData = {\n  tasks: {\n    'task1': {\n      id: 'task1',\n      content: 'Drag and Drop a Task!'\n    },\n    'task2': {\n      id: 'task2',\n      content: 'Add New Tasks Below'\n    },\n    'task3': {\n      id: 'task3',\n      content: 'Keeps Track of Progress'\n    },\n    'task4': {\n      id: 'task4',\n      content: 'New features to be released soon!'\n    }\n  },\n  columns: {\n    'column1': {\n      id: 'column1',\n      title: 'To Do',\n      taskIds: ['task1', 'task2', 'task3']\n    },\n    'column2': {\n      id: 'column2',\n      title: 'In Progress',\n      taskIds: []\n    },\n    'column3': {\n      id: 'column3',\n      title: 'Testing',\n      taskIds: ['task4']\n    },\n    'column4': {\n      id: 'column4',\n      title: 'Done',\n      taskIds: []\n    }\n  },\n  // Needed to reorder columns\n  columnOrder: ['column1', 'column2', 'column3', 'column4']\n};\nexport default function createBoard(currentUser) {\n  console.log(currentUser);\n} //Fire db functions on signup to create initial board\n// for (let task in InitialData.tasks) {\n//   database.tasks.add({\n//     taskId: InitialData.tasks[task].id,\n//     content: InitialData.tasks[task].content,\n//     userId: currentUser.uid,\n//     createdAt: database.getCurrentTimestamp(),\n//   })\n// }\n// for (let column in InitialData.columns) {\n//   database.columns.add({\n//     columnId: InitialData.columns[column].id,\n//     title: InitialData.columns[column].title,\n//     taskIds: InitialData.columns[column].taskIds,\n//     userId: currentUser.uid,\n//     createdAt: database.getCurrentTimestamp(),  \n//   })\n// }\n//export default InitialData;","map":{"version":3,"sources":["C:/Users/celoe/Kanban-1/src/Components/Dnd/InitialData.js"],"names":["InitialData","tasks","id","content","columns","title","taskIds","columnOrder","createBoard","currentUser","console","log"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACL,aAAS;AAAEC,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KADJ;AAEL,aAAS;AAAED,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAFJ;AAGL,aAAS;AAAED,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAHJ;AAIL,aAAS;AAAED,MAAAA,EAAE,EAAE,OAAN;AAAeC,MAAAA,OAAO,EAAE;AAAxB;AAJJ,GADW;AAQlBC,EAAAA,OAAO,EAAE;AACP,eAAW;AACTF,MAAAA,EAAE,EAAE,SADK;AAETG,MAAAA,KAAK,EAAE,OAFE;AAGTC,MAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB;AAHA,KADJ;AAMP,eAAW;AACTJ,MAAAA,EAAE,EAAE,SADK;AAETG,MAAAA,KAAK,EAAE,aAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA,KANJ;AAWP,eAAW;AACTJ,MAAAA,EAAE,EAAE,SADK;AAETG,MAAAA,KAAK,EAAE,SAFE;AAGTC,MAAAA,OAAO,EAAE,CAAC,OAAD;AAHA,KAXJ;AAgBP,eAAW;AACTJ,MAAAA,EAAE,EAAE,SADK;AAETG,MAAAA,KAAK,EAAE,MAFE;AAGTC,MAAAA,OAAO,EAAE;AAHA;AAhBJ,GARS;AA+BlB;AACAC,EAAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC;AAhCK,CAApB;AAoCA,eAAe,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,C,CAGD;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ","sourcesContent":["const InitialData = {\r\n  tasks: {\r\n    'task1': { id: 'task1', content: 'Drag and Drop a Task!'},\r\n    'task2': { id: 'task2', content: 'Add New Tasks Below'},\r\n    'task3': { id: 'task3', content: 'Keeps Track of Progress'},\r\n    'task4': { id: 'task4', content: 'New features to be released soon!'},\r\n  },\r\n\r\n  columns: {\r\n    'column1': {\r\n      id: 'column1',\r\n      title: 'To Do',\r\n      taskIds: ['task1', 'task2', 'task3'],\r\n    },\r\n    'column2': {\r\n      id: 'column2',\r\n      title: 'In Progress',\r\n      taskIds: [],\r\n    },\r\n    'column3': {\r\n      id: 'column3',\r\n      title: 'Testing',\r\n      taskIds: ['task4'],\r\n    },\r\n    'column4': {\r\n      id: 'column4',\r\n      title: 'Done',\r\n      taskIds: [],\r\n    },\r\n  },\r\n\r\n  // Needed to reorder columns\r\n  columnOrder: ['column1', 'column2', 'column3', 'column4'], \r\n\r\n};\r\n\r\nexport default function createBoard(currentUser) {\r\n  console.log(currentUser)\r\n}\r\n\r\n\r\n//Fire db functions on signup to create initial board\r\n \r\n    // for (let task in InitialData.tasks) {\r\n    //   database.tasks.add({\r\n    //     taskId: InitialData.tasks[task].id,\r\n    //     content: InitialData.tasks[task].content,\r\n    //     userId: currentUser.uid,\r\n    //     createdAt: database.getCurrentTimestamp(),\r\n    //   })\r\n    // }\r\n\r\n    // for (let column in InitialData.columns) {\r\n    //   database.columns.add({\r\n    //     columnId: InitialData.columns[column].id,\r\n    //     title: InitialData.columns[column].title,\r\n    //     taskIds: InitialData.columns[column].taskIds,\r\n    //     userId: currentUser.uid,\r\n    //     createdAt: database.getCurrentTimestamp(),  \r\n    //   })\r\n    // }\r\n\r\n//export default InitialData;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}