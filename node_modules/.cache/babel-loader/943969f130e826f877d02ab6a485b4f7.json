{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\celoe\\\\Kanban-1\\\\src\\\\Components\\\\Dnd\\\\TaskCounter.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskCounter(_ref) {\n  let {\n    state\n  } = _ref;\n  const toDoCount = state.columns['column1'].taskIds.length + state.columns['column2'].taskIds.length + state.columns['column3'].taskIds.length + state.columns['column4'].taskIds.length; //need more robust method in case # of columns dynamically change\n\n  const completedCount = state.columns['column4'].taskIds.length;\n  return /*#__PURE__*/_jsxDEV(\"h5\", {\n    className: \"m-3 text-secondary\",\n    children: [\"Tasks Completed: \", completedCount, \" / \", toDoCount, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCounter\");","map":{"version":3,"sources":["C:/Users/celoe/Kanban-1/src/Components/Dnd/TaskCounter.js"],"names":["React","TaskCounter","state","toDoCount","columns","taskIds","length","completedCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,OAAgC;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;AAC7C,QAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyBC,OAAzB,CAAiCC,MAAjC,GAA0CJ,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyBC,OAAzB,CAAiCC,MAA3E,GAAoFJ,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyBC,OAAzB,CAAiCC,MAArH,GAA8HJ,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyBC,OAAzB,CAAiCC,MAAjL,CAD6C,CAC2I;;AAExL,QAAMC,cAAc,GAAGL,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyBC,OAAzB,CAAiCC,MAAxD;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA,oCAAqDC,cAArD,SAAwEJ,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;KARuBF,W","sourcesContent":["import React from 'react'\r\n\r\nexport default function TaskCounter({ state }) {\r\n  const toDoCount = state.columns['column1'].taskIds.length + state.columns['column2'].taskIds.length + state.columns['column3'].taskIds.length + state.columns['column4'].taskIds.length //need more robust method in case # of columns dynamically change\r\n\r\n  const completedCount = state.columns['column4'].taskIds.length\r\n  \r\n  return (\r\n    <h5 className=\"m-3 text-secondary\">Tasks Completed: {completedCount} / {toDoCount} </h5>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}